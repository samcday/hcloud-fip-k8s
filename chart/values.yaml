# Default values for the-nat-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: samcday/the-nat-controller
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

hcloud:
  token:
    # Default way to provide token is to use the well known Secret location
    valueFrom:
      secretKeyRef:
        name: hcloud
        key: token
    # Can provide a literal here, if you really want.
    # value: hunter2
  config:
    # see: https://pkg.go.dev/github.com/hetznercloud/hcloud-go/hcloud?#ClientOption
    # pollInterval: 500 # milliseconds
    # endpoint: https://api.hetzner.cloud/v1
leaderElection:
  enabled: true
  leaseDuration: 15 # in seconds
  renewDeadline: 10 # in seconds
  retryPeriod: 2    # in seconds

floatingIP:
  # Limit floating IPs to be managed to given label selector. See https://docs.hetzner.cloud/#label-selector
  # selector: role=nat
  # label: node-role.kubernetes.io/nat-gateway
  # setupAnnotation: samcday.com/nat-gateway
  selector: role=vip
  label: node-role.kubernetes.io/vip
  setupAnnotation: samcday.com/vip
  setupJob:
    ttlSecondsAfterFinished: 3600
    template:
      spec:
        containers:
        - name: setup
          image: busybox:stable
          command:
          - /bin/chroot
          - /host
          - /bin/bash
          - -c
          - |-
            set -uexo pipefail
            ip addr replace "${FLOATING_IP}" dev eth0
          securityContext:
            privileged: true
          volumeMounts:
          - name: host
            mountPath: /host
        hostNetwork: true
        restartPolicy: OnFailure
        volumes:
        - name: host
          hostPath:
            type: Directory
            path: /
  teardownJob:
    ttlSecondsAfterFinished: 3600
    template:
      spec:
        containers:
        - name: teardown
          image: busybox:stable
          command:
            - /bin/chroot
            - /host
            - /bin/bash
            - -c
            - |-
              set -uexo pipefail
              ip addr del "${FLOATING_IP}"/32 dev eth0 || true
          securityContext:
            privileged: true
          volumeMounts:
          - name: host
            mountPath: /host
        hostNetwork: true
        restartPolicy: OnFailure
        volumes:
          - name: host
            hostPath:
              type: Directory
              path: /
config: |-
  apiVersion: thenatcontroller.samcday.com/v1alpha1
  kind: Config
  cacheNamespace: "{{ .Release.Namespace }}"
  health:
    healthProbeBindAddress: :8081
  metrics:
    bindAddress: 127.0.0.1:8080
  leaderElection:
    leaderElect: {{ .Values.leaderElection.enabled }}
    resourceName: {{ include "the-nat-controller.fullname" . }}
    resourceNamespace: "{{ .Release.Namespace }}"
    leaseDuration: "{{ .Values.leaderElection.leaseDuration }}s"
  hcloud:
    {{- tpl (toYaml .Values.hcloud.config) . | nindent 2 }}
  floatingIP:
    {{- tpl (toYaml .Values.floatingIP) . | nindent 2 }}

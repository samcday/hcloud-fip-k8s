replicaCount: 1

image:
  repository: ghcr.io/samcday/hcloud-fip-k8s
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

rbac:
  create: true

serviceAccount:
  create: true
  annotations: {}
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # limits:
  #   cpu: '1'
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

env:
- name: HCLOUD_TOKEN
  valueFrom:
    secretKeyRef:
      name: hcloud
      key: token

nodeSelector: {}

tolerations: []

affinity: {}

extraArgs: []

extraVolumes: []
# - name: secret
#   mountPath: /opt/secret
#   source:
#     secret:
#       secretName: foo

metrics:
  # the controller will provide metrics on this port
  port: 8080
  # if enabled, a PodMonitor will be deployed to scrape the controller metrics
  podMonitor: true

# The namespace the controller operates in. This is where leaderelection leases and setup/teardown Jobs will be.
namespace: "{{ .Release.Namespace }}"

hcloud:
  # Default way to provide token is to use the well known Secret location (see env: above)
  # You can provide a literal here, if you really want.
  # token: hunter2
  # see: https://pkg.go.dev/github.com/hetznercloud/hcloud-go/hcloud?#ClientOption
  # pollInterval: 500 # milliseconds
  # endpoint: https://api.hetzner.cloud/v1
  applicationName: "{{ .Chart.Name }}"
  applicationVersion: "{{ .Chart.Version }}"
leaderElection:
  leaseDuration: 15 # in seconds
  renewDeadline: 10 # in seconds
  retryPeriod: 2    # in seconds

floatingIP:
  # The following fields MUST be set.
  # Limit floating IPs to be managed to given label selector. See https://docs.hetzner.cloud/#label-selector
  selector: # role=egress
  label: # node-role.kubernetes.io/egress
  setupAnnotation: # hcloud-fip-k8s.samcday.com/egress
  jobNamespace: "{{ tpl .Values.namespace . }}"
  setupJob:
    ttlSecondsAfterFinished: 3600
    template:
      spec:
        containers:
        - name: setup
          image: busybox:stable
          command:
          - /bin/chroot
          - /host
          - /bin/bash
          - -c
          - |-
            set -uexo pipefail
            ip addr replace "${FLOATING_IP}" dev eth0
          securityContext:
            privileged: true
          volumeMounts:
          - name: host
            mountPath: /host
        hostNetwork: true
        restartPolicy: OnFailure
        volumes:
        - name: host
          hostPath:
            type: Directory
            path: /
  teardownJob:
    ttlSecondsAfterFinished: 3600
    template:
      spec:
        containers:
        - name: teardown
          image: busybox:stable
          command:
            - /bin/chroot
            - /host
            - /bin/bash
            - -c
            - |-
              set -uexo pipefail
              ip addr del "${FLOATING_IP}"/32 dev eth0 || true
          securityContext:
            privileged: true
          volumeMounts:
          - name: host
            mountPath: /host
        hostNetwork: true
        restartPolicy: OnFailure
        volumes:
          - name: host
            hostPath:
              type: Directory
              path: /
config: |-
  apiVersion: hcloud-fip-k8s.samcday.com/v1alpha1
  kind: Config
  cacheNamespace: "{{ tpl .Values.namespace . }}"
  health:
    healthProbeBindAddress: :8081
  metrics:
    bindAddress: :{{ .Values.metrics.port }}
  leaderElection:
    leaderElect: {{ gt (int .Values.replicas) 1 }}
    resourceName: {{ include "hcloud-fip-k8s.fullname" . }}
    resourceNamespace: "{{ tpl .Values.namespace . }}"
    leaseDuration: "{{ .Values.leaderElection.leaseDuration }}s"
    renewDeadline: "{{ .Values.leaderElection.renewDeadline }}s"
    retryPeriod: "{{ .Values.leaderElection.retryPeriod }}s"
  hcloud:
    {{- tpl (toYaml .Values.hcloud) . | nindent 2 }}
  floatingIP:
    {{- tpl (toYaml .Values.floatingIP) . | nindent 2 }}
